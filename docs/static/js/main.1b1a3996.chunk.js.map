{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","State","setState","useEffect","then","imgs","useFetchGifs","Imagenes","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAiB/C,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAa,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC7CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfjB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,aAmB3BZ,EAAYe,UAAY,CACtBd,aAAce,YAAUC,KAAKC,Y,mCC7BlBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EAAM,4FAA8FC,UAAUH,GAD/F,SAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARhB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEvC,OACE,sBAAKc,UAAU,OAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDd,SAACA,GAAe,IAAD,EACflB,mBAAS,CACjCyB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAczC,OARAC,qBAAU,WACRxB,EAAQC,GAAWwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACvCf,KAAMkB,EACNL,SAAS,SAGV,CAACpB,IAEGqB,EDX0BK,CAAa1B,GAAlC2B,EAF4B,EAEjCpB,KAAea,EAFkB,EAElBA,QAEtB,OACE,qCACE,mCAAMpB,EAAN,OACCoB,GAAW,6CACZ,qBAAKJ,UAAU,YAAf,SACGW,EAASlB,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEV1BiB,EAAe,WAAO,IAAD,EAEG9C,mBAAS,CAAC,cAFb,mBAEzBQ,EAFyB,KAEbT,EAFa,KAIhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,aAAeA,IAC5B,uBAGES,EAAWmB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,U,MCXxB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1b1a3996.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport { PropTypes } from \"prop-types\";\n\nexport const AddCategory = ({ setCategoria }) => {\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputValue = (e) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategoria((categorias) => [inputValue, ...categorias]);\n      setInputValue(\"\");\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputValue} />\n    </form>\n  );\n}\n\nAddCategory.prototype = {\n  setCategoria: PropTypes.func.isRequired\n}\n","export const getGifs = async ( categoria ) => {\n  const url = \"https://api.giphy.com/v1/gifs/search?api_key=dnQSdDZQ6N9LHucsRk4suomTzTT1hu1f&limit=10&q=\" + encodeURI(categoria);\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n    };\n  });\n\n  // setImagenes(gifs);\n  return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url}) => {\n\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ categoria }) => {\n\n  const {data:Imagenes, loading} = useFetchGifs(categoria);\n\n  return (\n    <>\n      <h3> {categoria} </h3>\n      {loading && <p> Loading... </p>}\n      <div className=\"card-grid\">\n        {Imagenes.map((img) => {\n          return <GifGridItem key={img.id} {...img} />;\n        })}\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (categoria) => {\n  const [State, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(categoria).then(imgs => setState({\n      data: imgs,\n      loading: false\n    }));\n\n  }, [categoria]);\n\n  return State;\n}","import React, { useState } from \"react\";\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n\n  const [categorias, setCategoria] = useState([\"Samurai X\"]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategoria={ setCategoria }/>\n      <hr />\n\n      {\n        categorias.map((categoria) =>\n          <GifGrid key={categoria} categoria={categoria}/>\n        )\n      }\n\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}